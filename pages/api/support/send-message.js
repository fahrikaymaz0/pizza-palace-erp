import { PrismaClient } from '@prisma/client';const prisma = new PrismaClient();export default async function handler(req, res) {  if (req.method !== 'POST') {    return res.status(405).json({ message: 'Method not allowed' });  }  try {    const { name, email, phone, message } = req.body;    // Validasyon    if (!name || !email || !message) {      return res.status(400).json({        success: false,        message: 'Ad, e-posta ve mesaj alanları zorunludur'      });    }    // E-posta formatı kontrolü    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;    if (!emailRegex.test(email)) {      return res.status(400).json({        success: false,        message: 'Geçerli bir e-posta adresi giriniz'      });    }    // Mesajı veritabanına kaydet    const supportMessage = await prisma.supportMessage.create({      data: {        name,        email,        phone: phone || null,        message,        status: 'unread'      }    });    res.status(201).json({      success: true,      message: 'Mesajınız başarıyla gönderildi. En kısa sürede size dönüş yapacağız.',      data: {        id: supportMessage.id,        name: supportMessage.name,        email: supportMessage.email,        createdAt: supportMessage.createdAt      }    });  } catch (error) {    console.error('Destek mesajı gönderme hatası:', error);    res.status(500).json({      success: false,      message: 'Mesaj gönderilirken bir hata oluştu. Lütfen tekrar deneyin.'    });  } finally {    await prisma.$disconnect();  }}